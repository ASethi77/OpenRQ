<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
Copyright 2014 Jose Lopes

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<project default="jar" name="OpenRQ" basedir=".">
    <description>
        Ant build file for building OpenRQ binary, javadoc and jar files.
    </description>

<!-- ================ Properties initialization ================ -->
    <property name="version" value="3.0"/>
    
    <property name="top.src_dir" location="src"/>
    <property name="top.build_dir" location="build"/>
    <property name="top.lib_dir" location="lib"/>
    
    <property name="main.src_dir" location="${top.src_dir}/main"/>
    <property name="main.build_dir" location="${top.build_dir}/main"/>
    <property name="main.jar_file" location="openrq-${version}.jar"/>

    <property name="test-common.src_dir" location="${top.src_dir}/test/common"/>

    <property name="test-functional.src_dir" location="${top.src_dir}/test/functional"/>
    <property name="test-functional.build_dir" location="${top.build_dir}/test/functional"/>
    <property name="test-functional.jar_file" location="openrq-${version}-functional-test.jar"/>
    <property name="test-functional.script_file" location="${top.lib_dir}/test/functional/build.xml"/>
    
    <property name="test-benchmark.src_dir" location="${top.src_dir}/test/benchmark"/>
    <property name="test-benchmark.build_dir" location="${top.build_dir}/test/benchmark"/>
    <property name="test-benchmark.jar_file" location="openrq-${version}-benchmark-test.jar"/>
    <property name="test-benchmark.script_file" location="${top.lib_dir}/test/benchmark/build.xml"/>
    
    <property name="docs.src_dir" location="${top.src_dir}/docs"/>
    <property name="docs.build_dir" location="docs"/>


<!-- ================ Script imports ================ -->
    <import file="${test-functional.script_file}"/>
    <import file="${test-benchmark.script_file}"/>


<!-- ================ Cleaning targets ================ -->
    <target name="clean" description="Remove binary files.">

        <delete dir="${top.build_dir}"/>

    </target>

    <target name="cleanall" depends="clean"
            description="Remove binary, Javadoc and Jar files.">

        <delete dir="${docs.build_dir}"/>
        <delete file="${main.jar_file}"/>
        <delete file="${test-functional.jar_file}"/>
        <delete file="${test-benchmark.jar_file}"/>

    </target>


<!-- ================ Main targets ================ -->
    <target name="build"
            description="Compile the main Java classes.">

        <delete dir="${main.build_dir}"/>
        <mkdir dir="${main.build_dir}"/>
        <javac srcdir="${main.src_dir}" destdir="${main.build_dir}"
               classpath="."
               includeAntRuntime="false"/>

    </target>

    <target name="jar" depends="build"
            description="Compile the main Java classes and pack them into a Jar file.">

        <delete file="${main.jar_file}"/>
        <jar destfile="${main.jar_file}" basedir="${main.build_dir}"/>

    </target>


<!-- ================ Javadoc targets ================ -->
    <target name="docs"
            description="Generate the Javadoc files for the public API.">

    	<delete dir="${docs.build_dir}"/>
        <javadoc destdir="${docs.build_dir}"
                 classpath="." source="1.7"
                 access="public"
                 doctitle="OpenRQ API ${version}"
                 splitindex="true" author="true" use="true"
                 noindex="false" nonavbar="false" notree="false"
                 nodeprecated="false" nodeprecatedlist="false">

            <fileset dir="${main.src_dir}" defaultexcludes="yes">
                <exclude name="**/util/**"/>
            </fileset>
            <link href="http://download.oracle.com/javase/7/docs/api/"/>

        </javadoc>
        
        <copy todir="${docs.build_dir}" overwrite="true">
            <fileset dir="${docs.src_dir}"/>
        </copy>

    </target>


<!-- ================ Functional testing targets ================ -->
    <!-- overriden private target from junit-build.xml -->
    <target name="-init-functional-properties">
        
        <property name="func.src_dirs" value="${main.src_dir}:${test-common.src_dir}:${test-functional.src_dir}"/>
        <property name="func.build_dir" value="${test-functional.build_dir}"/>
        <property name="func.jar_file" value="${test-functional.jar_file}"/>
        
    </target>
    
    <!-- requires jar target to be defined in the imported script -->
    <target name="-testfunc" depends="-functional-jar"/>

    <target name="testfunc"
            description="Compile the main Java classes and the functional test classes, and pack them into an executable Jar file.">
    
        <subant target="-testfunc" buildpath="." failonerror="true"/>
        
    </target>


<!-- ================ Benchmark testing targets ================ -->    
    <!-- overriden private target from junit-build.xml -->
    <target name="-init-benchmark-properties">
        
        <property name="bench.src_dirs" value="${main.src_dir}:${test-common.src_dir}:${test-benchmark.src_dir}"/>
        <property name="bench.build_dir" value="${test-benchmark.build_dir}"/>
        <property name="bench.jar_file" value="${test-benchmark.jar_file}"/>
        
    </target>
    
    <!-- requires jar target to be defined in the imported script -->
    <target name="-testbench" depends="-benchmark-jar"/>

    <target name="testbench"
            description="Compile the main Java classes and the benchmark test classes, and pack them into an executable Jar file.">
    
        <subant target="-testbench" buildpath="." failonerror="true"/>
        
    </target>


</project>
